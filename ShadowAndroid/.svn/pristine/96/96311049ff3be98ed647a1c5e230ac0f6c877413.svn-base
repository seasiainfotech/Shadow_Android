package com.android.shadow.views.auth;

import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.android.shadow.R;
import com.android.shadow.api.GetRestAdapter;
import com.android.shadow.model.input.EditProfileInput;
import com.android.shadow.model.input.SignupInput;
import com.android.shadow.model.output.EditProfileResponse;
import com.android.shadow.model.output.EmailOtpResponse;
import com.android.shadow.presenter.EmailOtpPresenter;
import com.android.shadow.presenter.SignUpPresenter;
import com.android.shadow.utils.PreferenceKeys;
import com.android.shadow.utils.SharedPrefsHelper;
import com.android.shadow.utils.Utilities;
import com.android.shadow.views.auth.forgotpassword.SetNewPasswordActivity;
import com.android.shadow.views.core.BaseActivity;
import com.android.shadow.views.dashboard.MainActivity;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;


public class EmailVerificationActivity extends BaseActivity implements View.OnClickListener, SignUpPresenter.SignUpCallback,
        EmailOtpPresenter.EmailOtpCallback, TextWatcher {

    private TextView mNextTextView;
    private EditText mEmailEditText;
    private Bundle mBundle;
    private SignUpPresenter mSignUpPresenter;
    private TextView mResendOtpTextView;
    private boolean isEmail = true;
    private EmailOtpPresenter emailForgotPasswordPresenter;
    private String mSignUpType;
    private boolean isPhoneConfirm;

    @Override
    protected int getLayoutId() {
        return R.layout.activity_email_verification;
    }

    @Override
    protected void initViews() {
        mBundle = getIntent().getExtras();
        mSignUpType = getIntent().getStringExtra("sign_up_type");
        isPhoneConfirm = getIntent().getBooleanExtra("confirmation", false);

        mNextTextView = (TextView) findViewById(R.id.text_view_next_email);
        mEmailEditText = (EditText) findViewById(R.id.edit_text_email);
        findViewById(R.id.image_view_back).setOnClickListener(this);
        mNextTextView.setOnClickListener(this);
        mEmailEditText.addTextChangedListener(this);

    }

    @Override
    public void dispose() {

    }

    @Override
    public void onBackPressed() {
        //super.onBackPressed();
        if (isPhoneConfirm) {
            Intent intent = new Intent(this, LoginActivity.class);
            startActivity(intent);
            finish();
        } else {
            super.onBackPressed();
        }


    }

    @Override
    public void onClick(View view) {
        Utilities.hideKeypad(view);
        switch (view.getId()) {
            case R.id.image_view_back:
                if (isPhoneConfirm) {
                    Intent intent = new Intent(this, LoginActivity.class);
                    startActivity(intent);
                    finish();
                } else finish();
                break;

            case R.id.text_view_next_email:
                String email = mEmailEditText.getText().toString().trim();
                if (isPhoneConfirm) {
                    if (!TextUtils.isEmpty(email) && Utilities.isValidEmail(email)) {
                        if (!Utilities.checkInternet(this)) {
                            showToast(R.string.no_internet_msg);
                        } else
                            checkResponse();
                    } else {
                        showToast("Please enter a valid email");
                    }

                } else {
                    if (mBundle == null) {
                        EmailOtpPresenter emailForgotPasswordPresenter = new EmailOtpPresenter(this, this);
                        emailForgotPasswordPresenter.checkValidations(mEmailEditText.getText().toString().trim());
                        //hit the resend otp api
                    } else {
                        if (mSignUpPresenter == null)
                            mSignUpPresenter = new SignUpPresenter(this, EmailVerificationActivity.this);
                        mSignUpPresenter.checkEmailValidation(email, mBundle);
                    }
                }
                break;

        }
    }


    @Override
    public void onEmailOtpSuccess(Response<EmailOtpResponse> response) {
        if (response != null && response.body() != null) {
            if (response.body().getStatus().equals("200")) {
                Log.e("response successful", "--------------");
                Intent setNewPasswordIntent = new Intent(this, SetNewPasswordActivity.class);
                setNewPasswordIntent.putExtra("coming_from", 0); // 0 when setnewactivity called from emailforgot
                setNewPasswordIntent.putExtra("email_otp", response.body().getData().getEmailOtp().toString());
                Log.e("email otp ------", response.body().getData().getEmailOtp());
                setNewPasswordIntent.putExtra("user_id", response.body().getData().getUserId().toString());
                startActivity(setNewPasswordIntent);
                finish();
            } else if (response.body().getStatus().equals("404")) {
                showToast(response.body().getMessage());
            } else {
                showToast(response.body().getMessage());
            }
        } else {
            showToast(R.string.server_error_msg);
        }
    }

    @Override
    public void onSignUpSuccess(SignupInput signupInput, boolean isEmail) {
        Intent intent = new Intent(this, EmailPhoneOtpVerifiyActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
        if (isEmail) {
            intent.putExtra("isEmail", isEmail);
            intent.putExtra("email", signupInput.getEmail());
        } else {
            intent.putExtra("isEmail", isEmail);
            intent.putExtra("phone", signupInput.getMobileNumber());
            intent.putExtra("country_code", signupInput.getCountryCode());
        }
        startActivity(intent);
        finish();
    }

    @Override
    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

    }

    @Override
    public void onTextChanged(CharSequence email, int i, int i1, int i2) {
        if (email != null && Utilities.isValidEmail(email.toString())) {
            mNextTextView.setTextColor(getResources().getColor(android.R.color.white));
            mNextTextView.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_filled_purple_border));
        } else {
            mNextTextView.setTextColor(getResources().getColor(R.color.colorPrimary));
            mNextTextView.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_purple_border));
        }
    }

    @Override
    public void afterTextChanged(Editable editable) {

    }


    private void checkResponse() {
        showDialog();
        SharedPrefsHelper sharedPrefsHelper = new SharedPrefsHelper(this);
        String userId = sharedPrefsHelper.get(PreferenceKeys.PREF_USER_ID);
        EditProfileInput editProfileInput = new EditProfileInput();
        editProfileInput.setUserId(userId);
        editProfileInput.setAppVersion(APP_NUMBER);
        editProfileInput.setAppBuildNumber(APP_BUILD_NUMBER);
        editProfileInput.setEmail(mEmailEditText.getText().toString());

        Call<EditProfileResponse> editProfileResponseCall = GetRestAdapter.getRestAdapter(true).editProfile(editProfileInput);
        editProfileResponseCall.enqueue(new Callback<EditProfileResponse>() {
            @Override
            public void onResponse(Call<EditProfileResponse> call, Response<EditProfileResponse> response) {
                hideDialog();
                if (response != null && response.body() != null) {
                    if (response.body().getStatus().equals("200")) {
                        Intent intent = new Intent(EmailVerificationActivity.this, MainActivity.class);
                        startActivity(intent);
                        finish();
                    } else {
                        showToast(response.body().getMessage());
                    }

                } else {
                    showToast(R.string.no_data_found_msg);
                }
            }

            @Override
            public void onFailure(Call<EditProfileResponse> call, Throwable t) {
                hideDialog();
                showToast(t.getMessage());

            }
        });

    }
}
