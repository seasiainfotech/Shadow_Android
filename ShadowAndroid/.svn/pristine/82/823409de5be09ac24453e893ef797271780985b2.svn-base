package com.android.shadow.views.dashboard;

import android.content.Intent;
import android.os.Build;
import android.support.annotation.RequiresApi;
import android.support.v4.content.ContextCompat;
import android.util.Log;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;

import com.android.shadow.R;
import com.android.shadow.model.output.GetProfileResponse;
import com.android.shadow.utils.PreferenceKeys;
import com.android.shadow.views.profile.ProfileBaseFragment;
import com.android.shadow.views.profile.editprofile.EditProfileUserActivity;
import com.android.shadow.views.profile.ourprofile.CompanyProfileFragment;
import com.android.shadow.views.profile.ourprofile.SchoolProfileFragment;
import com.android.shadow.views.profile.ourprofile.UserProfileFragment;
import com.android.shadow.views.search.SearchFragment;

public class MainActivity extends DasdboardBaseActivity
        implements NavigationView.OnNavigationItemSelectedListener, View.OnClickListener {


    @Override
    protected int getLayoutId() {
        return R.layout.activity_main;
    }

    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    @Override
    protected void initViews() {
        super.initViews();
        //mBlogImageView.setOnClickListener(this);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.setDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);


        mProfileImageView.setOnClickListener(this);
        mSearchImageView.setOnClickListener(this);
        mProfileView.setOnClickListener(this);
        mSearchView.setOnClickListener(this);
        replaceProfileFragment();
        String userID = mSharedPrefsHelper.get(PreferenceKeys.PREF_USER_ID);
        Log.e("userID-------", userID);
    }


    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
            finish();
        }
    }

    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    @Override
    public void onClick(View view) {
        int id = view.getId();
        if (id == R.id.image_view_profile || id == R.id.view_profile) {
            replaceProfileFragment();
            mProfileImageView.setBackground(ContextCompat.getDrawable(MainActivity.this, R.drawable.profile_purple));
            mSearchImageView.setBackground(ContextCompat.getDrawable(MainActivity.this, R.drawable.ic_search_gray));

        } else if (id == R.id.image_view_search || id == R.id.view_search) {
            replaceFragment(new SearchFragment(), null);
            mProfileImageView.setBackground(ContextCompat.getDrawable(MainActivity.this, R.drawable.profile_gray));
            mSearchImageView.setBackground(ContextCompat.getDrawable(MainActivity.this, R.drawable.ic_search_purple));
        }
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_shadow_me) {
            // Handle the camera action


        } else if (id == R.id.nav_edit_profile) {
            if (getCurrentFragment() instanceof ProfileBaseFragment) {
                GetProfileResponse profileResponse = ((ProfileBaseFragment) getCurrentFragment()).profileResponse;
                if (profileResponse != null && profileResponse.getData() != null) {
                    Intent intent = new Intent(this, EditProfileUserActivity.class);
                    intent.putExtra("profile_response", profileResponse);
                    startActivity(intent);
                }
            }
        } else if (id == R.id.nav_help) {

        } else if (id == R.id.nav_logout) {

        }

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
}
