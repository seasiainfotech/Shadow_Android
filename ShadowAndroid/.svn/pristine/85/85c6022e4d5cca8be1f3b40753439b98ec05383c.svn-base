package com.android.shadow.views.auth;

import android.content.Intent;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.android.shadow.R;
import com.android.shadow.api.GetRestAdapter;
import com.android.shadow.model.input.VerifyEmailOtpInput;
import com.android.shadow.model.input.VerifyPhoneOtpInput;
import com.android.shadow.model.output.EmailOtpResponse;
import com.android.shadow.model.output.PhoneOtpResponse;
import com.android.shadow.model.output.VerifyEmailOtpResponse;
import com.android.shadow.model.output.VerifyPhoneOtpResponse;
import com.android.shadow.presenter.EmailOtpPresenter;
import com.android.shadow.presenter.PhoneOtpPresenter;
import com.android.shadow.utils.PreferenceKeys;
import com.android.shadow.utils.SharedPrefsHelper;
import com.android.shadow.utils.Utilities;
import com.android.shadow.views.core.BaseActivity;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

/**
 * Created by jindaldipanshu on 6/2/2017.
 */

public class EmailPhoneOtpVerifiyActivity extends BaseActivity implements View.OnClickListener,
        EmailOtpPresenter.EmailOtpCallback, PhoneOtpPresenter.PhoneOtpCallback, TextWatcher {
    private EmailOtpPresenter emailForgotPasswordPresenter;
    private PhoneOtpPresenter mPhoneOtpPresenter;
    private EditText mOtpEdittext;
    private TextView mOtptextView;
    private boolean isEmail;
    private String mNumber, mCountryCode, mEmail;
    private Button mNextBtn;


    @Override
    protected int getLayoutId() {
        return R.layout.activity_email_phone_otp_verify;
    }

    @Override
    protected void initViews() {
        isEmail = getIntent().getBooleanExtra("isEmail", false);
        mOtptextView = (TextView) findViewById(R.id.text_phone);
        mOtpEdittext = (EditText) findViewById(R.id.email_otp_code);
        mNextBtn = (Button) findViewById(R.id.btn_next);
        mNextBtn.setOnClickListener(this);
        findViewById(R.id.btn_resend_otp).setOnClickListener(this);
        findViewById(R.id.image_view_back).setOnClickListener(this);
        mOtpEdittext.addTextChangedListener(this);

        if (isEmail) {
            mEmail = getIntent().getStringExtra("email");
            mOtptextView.setText("Enter the code send to you via your registered email.");
        } else {
            mNumber = getIntent().getStringExtra("phone");
            mCountryCode = getIntent().getStringExtra("country_code");
            mOtptextView.setText("Enter the code send to you via your registered mobile.");
        }
    }

    @Override
    public void dispose() {

    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        Intent intent = new Intent(this, LoginActivity.class);
        startActivity(intent);
        finish();

    }

    @Override
    public void onClick(View view) {
        Utilities.hideKeypad(view);
        switch (view.getId()) {
            case R.id.image_view_back:
                Intent intent = new Intent(this, LoginActivity.class);
                startActivity(intent);
                finish();
            case R.id.btn_resend_otp:
                if (isEmail) {
                    if (emailForgotPasswordPresenter == null) {
                        emailForgotPasswordPresenter = new EmailOtpPresenter(this, this);
                    }
                    emailForgotPasswordPresenter.checkValidations(mEmail);
                } else {
                    if (mPhoneOtpPresenter == null) {
                        mPhoneOtpPresenter = new PhoneOtpPresenter(this, this);
                    }
                    mPhoneOtpPresenter.checkValidations(mNumber, mCountryCode);
                }
                break;
            case R.id.btn_next:
                Utilities.hideKeypad(view);
                String otp = mOtpEdittext.getText().toString().trim();
                if (TextUtils.isEmpty(otp)) {
                    showToast("Please enter valid otp");
                } else {
                    if (!Utilities.checkInternet(this)) {
                        showToast(R.string.no_internet_msg);
                    } else if (isEmail) {
                        SharedPrefsHelper sharedPrefsHelper = new SharedPrefsHelper(this);
                        String userId = sharedPrefsHelper.get(PreferenceKeys.PREF_USER_ID);
                        VerifyEmailOtpInput verifyEmailOtpInput = new VerifyEmailOtpInput();
                        verifyEmailOtpInput.setUserId(userId);
                        verifyEmailOtpInput.setEmailVerificationOtp(otp);
                        checkResponseEmail(verifyEmailOtpInput);
                    } else {
                        SharedPrefsHelper sharedPrefsHelper = new SharedPrefsHelper(this);
                        String userId = sharedPrefsHelper.get(PreferenceKeys.PREF_USER_ID);
                        VerifyPhoneOtpInput verifyPhoneOtpInput = new VerifyPhoneOtpInput();
                        verifyPhoneOtpInput.setUserId(userId);
                        verifyPhoneOtpInput.setSmsVerificationOtp(otp);
                        checkResponsePhone(verifyPhoneOtpInput);
                    }
                }
                break;
        }
    }

    private void checkResponsePhone(VerifyPhoneOtpInput verifyPhoneOtpInput) {
        showDialog();
        Call<VerifyPhoneOtpResponse> response = GetRestAdapter.getRestAdapter(false).verifyPhoneOtp(verifyPhoneOtpInput);
        response.enqueue(new Callback<VerifyPhoneOtpResponse>() {
            @Override
            public void onResponse(Call<VerifyPhoneOtpResponse> call, retrofit2.Response<VerifyPhoneOtpResponse> response) {
                hideDialog();
                if (response != null && response.body() != null) {
                    if (response.body().getStatus() != null && response.body().getStatus().equals("200")) {
                        Log.e("phone otp verification", "successfulll -----");
                        Intent intent = new Intent(EmailPhoneOtpVerifiyActivity.this, EmailVerificationActivity.class);
                        intent.putExtra("confirmation", true);
                        startActivity(intent);
                        finish();
                    } else {
                        showToast(response.body().getMessage());
                    }
                } else {
                    showToast(R.string.server_error_msg);
                }
            }

            @Override
            public void onFailure(Call<VerifyPhoneOtpResponse> call, Throwable t) {
                hideDialog();
                showToast(t.getLocalizedMessage());
            }
        });
    }

    private void checkResponseEmail(VerifyEmailOtpInput verifyEmailOtpInput) {
        showDialog();
        Call<VerifyEmailOtpResponse> response = GetRestAdapter.getRestAdapter(false).verifyEmail(verifyEmailOtpInput);
        response.enqueue(new Callback<VerifyEmailOtpResponse>() {
            @Override
            public void onResponse(Call<VerifyEmailOtpResponse> call, retrofit2.Response<VerifyEmailOtpResponse> response) {
                hideDialog();
                if (response != null && response.body() != null) {
                    if (response.body().getStatus() != null && response.body().getStatus().equals("200")) {
                        Log.e("email otp verification", "successfulll -----");
                        Intent intent = new Intent(EmailPhoneOtpVerifiyActivity.this, PhoneVerificationActivity.class);
                        intent.putExtra("confirmation", true);
                        startActivity(intent);
                        finish();

                    } else {
                        showToast(response.body().getMessage());
                    }
                } else {
                    showToast(R.string.server_error_msg);
                }
            }

            @Override
            public void onFailure(Call<VerifyEmailOtpResponse> call, Throwable t) {
                hideDialog();
                showToast(t.getLocalizedMessage());
            }
        });

    }

    @Override
    public void onEmailOtpSuccess(Response<EmailOtpResponse> response) {
        if (response != null && response.body() != null) {
            if (response.body().getStatus().equals("200")) {
                showToast("OTP has been sent successfully");
            } else {
                if (response.body().getMessage() != null)
                    showToast(response.body().getMessage());
                else
                    showToast(R.string.server_error_msg);
            }

        } else {
            showToast(R.string.server_error_msg);
        }

    }

    @Override
    public void onPhoneOtpSuccess(Response<PhoneOtpResponse> response) {
        if (response != null && response.body() != null) {
            if (response.body().getStatus().equals("200")) {
                showToast("OTP has been sent successfully");
            } else {
                if (response.body().getMessage() != null)
                    showToast(response.body().getMessage());
                else
                    showToast(R.string.server_error_msg);
            }

        } else {
            showToast(R.string.server_error_msg);
        }
    }

    @Override
    public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

    }

    @Override
    public void onTextChanged(CharSequence otpText, int i, int i1, int i2) {

        if (otpText != null && otpText.length() >= 6) {
            mNextBtn.setTextColor(getResources().getColor(android.R.color.white));
            mNextBtn.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_filled_purple_border));
        } else {
            mNextBtn.setTextColor(getResources().getColor(R.color.colorPrimary));
            mNextBtn.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_purple_border));
        }

    }

    @Override
    public void afterTextChanged(Editable editable) {

    }
}
