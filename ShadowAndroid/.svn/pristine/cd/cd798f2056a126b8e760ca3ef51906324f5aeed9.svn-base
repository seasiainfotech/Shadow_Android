package com.android.shadow.presenter;

import android.content.Context;
import android.content.Intent;
import android.util.Log;

import com.android.shadow.R;
import com.android.shadow.api.GetRestAdapter;
import com.android.shadow.model.input.GetAvailableCompanyListInput;
import com.android.shadow.model.output.EditProfileResponse;
import com.android.shadow.model.output.GetAvailableCompanyListResponse;
import com.android.shadow.utils.PreferenceKeys;
import com.android.shadow.utils.SharedPrefsHelper;
import com.android.shadow.views.auth.LoginActivity;
import com.android.shadow.views.profile.editprofile.EditProfileBaseActivity;
import com.google.gson.Gson;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

/**
 * Created by singhgharjyot on 7/21/2017.
 */

public class CompanyListDialogPresenter {
    public SharedPrefsHelper sharedPrefsHelper;
    private EditProfileBaseActivity mEditProfileBaseActivity;

    public void checkCompanyListValidation() {
        SharedPrefsHelper sharedPrefsHelper = new SharedPrefsHelper(mEditProfileBaseActivity);
        String userId = sharedPrefsHelper.get(PreferenceKeys.PREF_USER_ID);
        GetAvailableCompanyListInput getAvailableCompanyListInput = new GetAvailableCompanyListInput();
        getAvailableCompanyListInput.setUserId(userId);
        getAvailableCompanyListInput.setSearchKeyword("");
        getCompanyList(getAvailableCompanyListInput);
    }

    private void getCompanyList(GetAvailableCompanyListInput getAvailableCompanyListInput) {
        mEditProfileBaseActivity.showDialog();
        Call<GetAvailableCompanyListResponse> editProfileResponseCall = GetRestAdapter.getRestAdapter(false).getAvailCompList(getAvailableCompanyListInput);
        editProfileResponseCall.enqueue(new Callback<GetAvailableCompanyListResponse>() {


            @Override
            public void onResponse(Call<GetAvailableCompanyListResponse> call, Response<GetAvailableCompanyListResponse> response) {
                mEditProfileBaseActivity.hideDialog();
                if (response != null && response.body() != null) {
                    if (response.body().getStatus().equals("200")) {
                        Gson gson = new Gson();
                        String json = gson.toJson(response.body(), EditProfileResponse.class);
                        Log.e("GetAvailCompResponse--", json);




                    } else if (response.body().getStatus().equals("401")) {
                        sharedPrefsHelper.clearAll();
                        Intent intent = new Intent(mEditProfileBaseActivity, LoginActivity.class);
                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
                        mEditProfileBaseActivity.startActivity(intent);
                        mEditProfileBaseActivity.finish();
                    } else {
                        mEditProfileBaseActivity.showToast(response.body().getMessage());
                    }
                } else {
                    mEditProfileBaseActivity.showToast(R.string.server_error_msg);
                }
            }

            @Override
            public void onFailure(Call<GetAvailableCompanyListResponse> call, Throwable t) {
                mEditProfileBaseActivity.hideDialog();
                mEditProfileBaseActivity.showToast(t.getMessage());
            }
        });
    }
}
