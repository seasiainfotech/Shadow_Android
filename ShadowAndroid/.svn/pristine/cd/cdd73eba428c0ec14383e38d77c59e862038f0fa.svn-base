package com.android.shadow.views.auth.company;

import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.android.shadow.R;
import com.android.shadow.dialog.EmailNumberSelectionDialog;
import com.android.shadow.model.input.SignupInput;
import com.android.shadow.presenter.CompanyPresenter;
import com.android.shadow.presenter.SignUpPresenter;
import com.android.shadow.utils.PreferenceKeys;
import com.android.shadow.utils.Utilities;
import com.android.shadow.views.auth.EmailPhoneOtpVerifiyActivity;
import com.android.shadow.views.auth.EmailVerificationActivity;
import com.android.shadow.views.auth.PhoneVerificationActivity;
import com.android.shadow.views.core.BaseActivity;
import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
import com.google.android.gms.common.GooglePlayServicesRepairableException;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.location.places.Place;
import com.google.android.gms.location.places.ui.PlaceAutocomplete;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.LatLngBounds;

public class CompanyActivity extends BaseActivity implements View.OnClickListener, CompanyPresenter.CompanyCallback,
        EmailNumberSelectionDialog.EmailSelectionCallback,SignUpPresenter.SignUpCallback {

    private static final LatLngBounds BOUNDS_GREATER_SYDNEY = new LatLngBounds(
            new LatLng(-34.041458, 150.790100), new LatLng(-33.682247, 151.383362));
    private static final int PLACE_AUTOCOMPLETE_REQUEST_CODE = 1;
    private TextView mNextTextView;
    private EditText mCompanyEditText;
    private CompanyPresenter mCompanyPresenter;
    private Bundle mBundle;
    private Double mLongitude, mLatitude;
    private EditText mLocationEditText;
    private SignUpPresenter mSignUpPresenter;

    @Override
    protected int getLayoutId() {
        return R.layout.activity_company;
    }

    @Override
    protected void initViews() {
        mBundle = getIntent().getExtras();
        mCompanyEditText = (EditText) findViewById(R.id.edit_text_company_name);
        mLocationEditText = (EditText) findViewById(R.id.edit_text_company_location);
        mNextTextView = (TextView) findViewById(R.id.text_view_next_comp);
        mNextTextView.setOnClickListener(this);
        mLocationEditText.setOnClickListener(this);
        findViewById(R.id.image_view_back).setOnClickListener(this);
        registerTextChangeListener();
    }

    @Override
    public void dispose() {
        if (mCompanyPresenter != null) {
            mCompanyPresenter = null;
        }
    }


    private void calLocation() {
        try {
            Intent intent =
                    new PlaceAutocomplete.IntentBuilder(PlaceAutocomplete.MODE_FULLSCREEN)
                            .build(this);
            startActivityForResult(intent, PLACE_AUTOCOMPLETE_REQUEST_CODE);
        } catch (GooglePlayServicesRepairableException e) {
            // TODO: Handle the error.
        } catch (GooglePlayServicesNotAvailableException e) {
            // TODO: Handle the error.
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == PLACE_AUTOCOMPLETE_REQUEST_CODE) {
            if (resultCode == RESULT_OK) {
                Place place = PlaceAutocomplete.getPlace(this, data);
                Log.e("AS", "Place: " + place.getName());

                LatLng latlong = place.getLatLng();
                mLocationEditText.setFocusable(false);
                mLocationEditText.setText(place.getName());

                mLongitude = latlong.longitude;
                mLatitude = latlong.latitude;
            } else if (resultCode == PlaceAutocomplete.RESULT_ERROR) {
                Status status = PlaceAutocomplete.getStatus(this, data);

            } else if (resultCode == RESULT_CANCELED) {
                // The user canceled the operation.
            }
        }
    }


    @Override
    public void onClick(View view) {
        Utilities.hideKeypad(view);
        switch (view.getId()) {

            case R.id.edit_text_company_location:
                calLocation();
                break;

            case R.id.image_view_back:
                finish();
                break;

            case R.id.text_view_next_comp:
                if (mCompanyPresenter == null)
                    mCompanyPresenter = new CompanyPresenter(CompanyActivity.this, CompanyActivity.this);
                mCompanyPresenter.checkValidations(mCompanyEditText.getText().toString().trim(),
                        mLocationEditText.getText().toString().trim());
                break;
        }
    }

    @Override
    public void onSuccess(String lat) {
      /*  EmailNumberSelectionDialog emailNumberSelectionDialog = new EmailNumberSelectionDialog(this, this);
        emailNumberSelectionDialog.showEmailNumberDialog(R.string.dialog_verify_otp_title_name);*/
        mBundle.putString(PreferenceKeys.PREF_USER_COMPANYT_NAME, mCompanyEditText.getText().toString().trim());
        mBundle.putString(PreferenceKeys.PREF_LOCATION, mLocationEditText.getText().toString().trim());
        mBundle.putString(PreferenceKeys.PREF_LONG, mLongitude + "");
        mBundle.putString(PreferenceKeys.PREF_LAT, mLatitude + "");
        mSignUpPresenter = new SignUpPresenter(this, this);
        mSignUpPresenter.checkEmailValidation(mBundle.getString(PreferenceKeys.PREF_EMAIL_ID), mBundle);
    }

    @Override
    public void getSelection(boolean isEmailSelected) {
        mBundle.putString(PreferenceKeys.PREF_USER_COMPANYT_NAME, mCompanyEditText.getText().toString().trim());
        mBundle.putString(PreferenceKeys.PREF_LOCATION, mLocationEditText.getText().toString().trim());
        mBundle.putString(PreferenceKeys.PREF_LONG, mLongitude + "");
        mBundle.putString(PreferenceKeys.PREF_LAT, mLatitude + "");

        if (isEmailSelected) {
            Intent intent = new Intent(CompanyActivity.this, EmailVerificationActivity.class);
            intent.putExtras(mBundle);
            intent.putExtra("sign_up_type", "company");
            startActivity(intent);
        } else {
            Intent intent = new Intent(CompanyActivity.this, PhoneVerificationActivity.class);
            intent.putExtras(mBundle);
            startActivity(intent);
        }
    }

    private void registerTextChangeListener() {

        mCompanyEditText.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence compa, int i, int i1, int i2) {
                String location = mLocationEditText.getText().toString().trim();
                if (compa != null && compa.length() >= 4 && !TextUtils.isEmpty(location)) {
                    mNextTextView.setTextColor(getResources().getColor(android.R.color.white));
                    mNextTextView.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_filled_purple_border));
                } else {
                    mNextTextView.setTextColor(getResources().getColor(R.color.colorPrimary));
                    mNextTextView.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_purple_border));
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {

            }
        });
        mLocationEditText.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence locationText, int i, int i1, int i2) {
                String school_name = mCompanyEditText.getText().toString().trim();
                if (school_name != null && school_name.length() >= 4 && !TextUtils.isEmpty(locationText)) {
                    mNextTextView.setTextColor(getResources().getColor(android.R.color.white));
                    mNextTextView.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_filled_purple_border));
                } else {
                    mNextTextView.setTextColor(getResources().getColor(R.color.colorPrimary));
                    mNextTextView.setBackgroundDrawable(getResources().getDrawable(R.drawable.round_purple_border));
                }
            }

            @Override
            public void afterTextChanged(Editable editable) {

            }
        });
    }

    @Override
    public void onSignUpSuccess(SignupInput signupInput, boolean isEmail) {
        Intent intent = new Intent(this, EmailPhoneOtpVerifiyActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
        if (isEmail) {
            intent.putExtra("isEmail", isEmail);
            intent.putExtra("email", signupInput.getEmail());
        } else {
            intent.putExtra("isEmail", isEmail);
            intent.putExtra("phone", signupInput.getMobileNumber());
            intent.putExtra("country_code", signupInput.getCountryCode());
        }
        startActivity(intent);
        finish();
    }
}
