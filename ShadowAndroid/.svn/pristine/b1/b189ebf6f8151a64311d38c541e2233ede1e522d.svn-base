package com.android.shadow.views.profile.anotheruserprofile;

import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.RequiresApi;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

import com.android.shadow.R;
import com.android.shadow.adapter.profile.ProfileOccupationsAdapter;
import com.android.shadow.model.output.GetProfileResponse;
import com.android.shadow.presenter.ProfilePresenter;
import com.android.shadow.views.profile.FullImageActivity;
import com.android.shadow.views.profile.ProfileBaseFragment;
import com.android.shadow.views.profile.editprofile.EditProfileCompanyActivity;
import com.android.shadow.views.ratingcomment.UserOwnRatingViewActivity;
import com.android.shadow.views.videoRecording.VideoPlayActivity;
import com.bumptech.glide.Glide;

import retrofit2.Response;

/**
 * Created by jindaldipanshu on 5/30/2017.
 */

public class AnotherCompanyProfileFragment extends ProfileBaseFragment implements View.OnClickListener, ProfilePresenter.ProfileCallback {

    private TextView mCompLocationTextView, mCompUrlTextView;
    private ProfileOccupationsAdapter mOccupationsAdapter;
    private String mOtherUserId;

    @Override
    protected int getLayoutId() {
        return R.layout.fragment_company_profile;
    }

    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    @Override
    protected void initViews(View view) {
        super.initViews(view);
        Bundle bundle = getArguments();
        if (bundle != null) {
            mOtherUserId = bundle.getString("user_id");
        }
        mSettingsImageView.setVisibility(View.INVISIBLE);
        mEditImageView.setVisibility(View.INVISIBLE);
        mNotificationImageView.setVisibility(View.INVISIBLE);

        mCompNmTextView = (TextView) view.findViewById(R.id.text_view_company_name);
        mCompUrlTextView = (TextView) view.findViewById(R.id.text_view_company_url);
        mCompLocationTextView = (TextView) view.findViewById(R.id.text_view_company_location);
        registerListener();
    }

    @Override
    public void onStart() {
        super.onStart();
        if (mProfilePresenter == null) {
            mProfilePresenter = new ProfilePresenter(this, this);
        }
        mProfilePresenter.otherUserProfile(mUserid, mOtherUserId);
    }

    @Override
    public void dispose() {
        if (mProfilePresenter != null) {
            mProfilePresenter = null;
        }
    }

    @Override
    public void onClick(View view) {
        Intent intent;
        switch (view.getId()) {
            case R.id.iv_edit:
                if (profileResponse != null && profileResponse.getData() != null) {
                    intent = new Intent(getActivity(), EditProfileCompanyActivity.class);
                    intent.putExtra("profile_response", profileResponse);
                    startActivity(intent);
                }
                break;
            case R.id.iv_settings:
                showToast(R.string.coming_soon);
                break;
            case R.id.iv_notification:
                showToast(R.string.coming_soon);
                break;
            case R.id.iv_request:
                showToast(R.string.coming_soon);
                break;
            case R.id.iv_message:
                showToast(R.string.coming_soon);
                break;
            case R.id.iv_video:
                if (profileResponse != null && profileResponse.getData() != null && !TextUtils.isEmpty(profileResponse.getData().getVideoUrl())) {
                    intent = new Intent(getBaseActivity(), VideoPlayActivity.class);
                    intent.putExtra("video_url", profileResponse.getData().getVideoUrl());
                    startActivity(intent);
                } else {
                    showToast("No video recorded");
                }
                break;
            case R.id.iv_user_profile:
                if (profileResponse != null && profileResponse.getData() != null) {
                    intent = new Intent(getBaseActivity(), FullImageActivity.class);
                    intent.putExtra("user_image", profileResponse.getData().getProfileImageUrl());
                    startActivity(intent);
                }
                break;
            case R.id.iv_url1:
                if (mSelectedMediaList != null && mSelectedMediaList.size() > 0) {
                    callWebIntent(mSelectedMediaList.get(0).getUrl());
                }

                break;
            case R.id.iv_url2:
                if (mSelectedMediaList != null && mSelectedMediaList.size() >= 2) {
                    callWebIntent(mSelectedMediaList.get(1).getUrl());
                }

                break;
            case R.id.iv_url3:
                if (mSelectedMediaList != null && mSelectedMediaList.size() >= 3) {
                    callWebIntent(mSelectedMediaList.get(2).getUrl());
                }
                break;
            case R.id.ll_rating:
                if (profileResponse != null && profileResponse.getData() != null
                        ) {

                    if (mUserid.equals(mOtherUserId)) {
                        return;
                    }
                    intent = new Intent(getActivity(), UserOwnRatingViewActivity.class);
                    Bundle bundle = new Bundle();
                    bundle.putString("role", "company");
                    bundle.putString("user_id", mUserid);
                    bundle.putString("other_user_id", mOtherUserId);
                    bundle.putString("name", profileResponse.getData().getCompanyName());
                    bundle.putString("profile_image", profileResponse.getData().getProfileImageUrl());
                    bundle.putString("avg_rating", profileResponse.getData().getAvgRating());
                    intent.putExtras(bundle);
                    startActivity(intent);
                }
                break;
        }
    }


    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    @Override
    public void onProfileSuccess(Response<GetProfileResponse> response) {
        if (response != null && response.body() != null) {
            if (response.body().getStatus().equals("200")) {
                Log.e("profile response -----", "successfull");
                setDataOnUi(response);
            } else {
                showToast(response.body().getMessage());
            }
        } else {
            showToast(R.string.server_error_msg);
        }
    }

    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    public void setDataOnUi(Response<GetProfileResponse> response) {
        profileResponse = response.body();
        if (profileResponse != null) {

            if (profileResponse.getData().getCompanyName() != null) {
                mCompNmTextView.setText(profileResponse.getData().getCompanyName());
            } else {
                mCompNmTextView.setText(" ");
            }
            if (profileResponse.getData().getProfileImageUrl() != null) {
                Glide.with(this).load(profileResponse.getData().getProfileImageUrl())
                        .into(mUserImagView);
            }
            if (profileResponse.getData().getCompanyUrl() != null) {
                mCompUrlTextView.setText(profileResponse.getData().getCompanyUrl());
            } else {
                mCompUrlTextView.setText("");
            }

            if (profileResponse.getData().getLocation() != null) {
                mCompLocationTextView.setText(profileResponse.getData().getLocation());
            } else {
                mCompLocationTextView.setText("");
            }


            if (profileResponse.getData().getBio() != null) {
                mBioTextView.setText(profileResponse.getData().getBio());
            } else {
                mBioTextView.setText("");
            }


            if (profileResponse.getData().getOccupations() != null && profileResponse.getData().getOccupations().size() > 0) {
                mOccupationsList = response.body().getData().getOccupations();
                setOccupationsAdapter();
            }
            String avgRating = profileResponse.getData().getAvgRating();
            double rating = 0;
            if (!TextUtils.isEmpty(avgRating)) {
                rating = Double.parseDouble(avgRating);
            }
            setRating((int) rating);
            addSocialData(response.body());
        }
    }

    protected void setOccupationsAdapter() {
        mOccupationsAdapter = new ProfileOccupationsAdapter(this, mOccupationsList);
        mOccupationsGridView.setAdapter(mOccupationsAdapter);
    }


    private void registerListener() {
        mUserImagView.setOnClickListener(this);
        mNotificationImageView.setOnClickListener(this);
        mMessageImageView.setOnClickListener(this);
        mRequestImageView.setOnClickListener(this);
        mVideoImageView.setOnClickListener(this);

        findViewById(R.id.ll_rating).setOnClickListener(this);
        findViewById(R.id.iv_edit).setOnClickListener(this);
        findViewById(R.id.iv_settings).setOnClickListener(this);
    }
}
