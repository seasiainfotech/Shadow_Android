package com.android.shadow.adapter.search;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.android.shadow.R;
import com.android.shadow.model.output.SearchLocationListResponse;
import com.android.shadow.views.core.BaseActivity;
import com.android.shadow.views.profile.AnotherUserProfileActivity;
import com.bumptech.glide.Glide;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.StringTokenizer;

import de.hdodenhof.circleimageview.CircleImageView;

/**
 * Created by singhgharjyot on 7/6/2017.
 */

public class SearchLocationListAdapter extends RecyclerView.Adapter<SearchLocationListAdapter.ViewHolder> {

    private ArrayList<SearchLocationListResponse.Data> mList;
    private BaseActivity mActivity;

    public SearchLocationListAdapter(BaseActivity context, ArrayList<?> mList) {
        this.mList = (ArrayList<SearchLocationListResponse.Data>) mList;
        this.mActivity = context;
    }

    @Override
    public SearchLocationListAdapter.ViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
        View itemLayoutView = LayoutInflater.from(viewGroup.getContext())
                .inflate(R.layout.row_search, null);
        // create ViewHolder
        SearchLocationListAdapter.ViewHolder viewHolder = new SearchLocationListAdapter.ViewHolder(itemLayoutView);
        return viewHolder;
    }

    @Override
    public void onBindViewHolder(SearchLocationListAdapter.ViewHolder viewHolder, int position) {
        viewHolder.mNameTextView.setText(mList.get(position).getName());
        viewHolder.mDistanceTextView.setText(mList.get(position).getDistance());
        Glide.with(mActivity).
                load(mList.get(position).getUserDTO().getProfileImageUrl()).
                error(mActivity.getResources().getDrawable(R.drawable.profile_gray)).
                into(viewHolder.mProfileImageView);

        String distance = mList.get(position).getDistance();
        long dis;
        if (!TextUtils.isEmpty(distance)){
            if (distance.contains("Miles") || distance.contains("miles")){
                  String tempDistr=distance.replace("Miles","");
               StringTokenizer  stringTokenizer=new StringTokenizer(tempDistr,".");

                //dis=Long.parseLong(tempDistr);
               // dis=round(Double.parseDouble(tempDistr),2);
                viewHolder.mDistanceTextView.setText(stringTokenizer.nextToken()+" miles");
            }else {
                dis=Long.parseLong(distance);
              //  dis = round(Double.parseDouble(distance), 2);
                viewHolder.mDistanceTextView.setText(dis + "");
            }
        }else {
            viewHolder.mDistanceTextView.setText(0+" miles");
        }

        String rating = mList.get(position).getAvgRating();
        double rate = 0;
        if (!TextUtils.isEmpty(rating)) {
            rate = Double.parseDouble(rating);
        }

        viewHolder.mAverageRatingTextView.setText(rate+"");
        //setRating(viewHolder, (int) rate);
        if (mList.get(position).getUserDTO().getRole().contains("USER")){
            if (!TextUtils.isEmpty(mList.get(position).getUserDTO().getCompanyName())) {
                viewHolder.mTypeImageView.setImageResource(R.drawable.company_icon);
                viewHolder.mTypeNameTextView.setText(mList.get(position).getUserDTO().getCompanyName());
            }else if (!TextUtils.isEmpty(mList.get(position).getUserDTO().getSchoolName())){
                viewHolder.mTypeImageView.setImageResource(R.drawable.school);
                viewHolder.mTypeNameTextView.setText(mList.get(position).getUserDTO().getSchoolName());
            }else {
                viewHolder.mTypeImageView.setVisibility(View.GONE);
                viewHolder.mTypeNameTextView.setVisibility(View.GONE);
            }
        }else if (mList.get(position).getUserDTO().getRole().contains("COMPANY")){
            if (!TextUtils.isEmpty(mList.get(position).getUserDTO().getLocation())) {
                viewHolder.mTypeImageView.setImageResource(R.drawable.ic_location);
                viewHolder.mTypeNameTextView.setText(mList.get(position).getUserDTO().getLocation());
            }else {
                viewHolder.mTypeImageView.setVisibility(View.GONE);
                viewHolder.mTypeNameTextView.setVisibility(View.GONE);
            }
        } else if (mList.get(position).getUserDTO().getRole().contains("SCHOOL")){
            if (!TextUtils.isEmpty(mList.get(position).getUserDTO().getLocation())) {
                viewHolder.mTypeImageView.setImageResource(R.drawable.ic_location);
                viewHolder.mTypeNameTextView.setText(mList.get(position).getUserDTO().getLocation());
            }else {
                viewHolder.mTypeImageView.setVisibility(View.GONE);
                viewHolder.mTypeNameTextView.setVisibility(View.GONE);
            }
        }
    }

    public static double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();
        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(places, RoundingMode.HALF_UP);
        return bd.doubleValue();
    }

    @Override
    public int getItemCount() {
        return mList == null ? 0 : mList.size();
    }

    public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private final TextView mAverageRatingTextView;
        private final ImageView mTypeImageView;
        private final TextView mTypeNameTextView;
        // private final LinearLayout mRatingLl;
        //private final ImageView mStar1, mStar2, mStar3, mStar4, mStar5;
        private TextView mDistanceTextView;
        private TextView mNameTextView;
        private CircleImageView mProfileImageView;

        public ViewHolder(View itemView) {
            super(itemView);
            mNameTextView = (TextView) itemView.findViewById(R.id.text_view_name);
            mDistanceTextView = (TextView) itemView.findViewById(R.id.text_view_distance);
            mProfileImageView = (CircleImageView) itemView.findViewById(R.id.Circular_image_view_Profile_pic);
            mAverageRatingTextView = (TextView) itemView.findViewById(R.id.text_view_average_rating);
            mTypeImageView = (ImageView) itemView.findViewById(R.id.iv_icon_type);
            mTypeNameTextView = (TextView) itemView.findViewById(R.id.text_view_type_name);
           // mRatingLl = (LinearLayout) itemView.findViewById(R.id.ll_rating);
           /* mStar1 = (ImageView) itemView.findViewById(R.id.iv_star1);
            mStar2 = (ImageView) itemView.findViewById(R.id.iv_star2);
            mStar3 = (ImageView) itemView.findViewById(R.id.iv_star3);
            mStar4 = (ImageView) itemView.findViewById(R.id.iv_star4);
            mStar5 = (ImageView) itemView.findViewById(R.id.iv_star5);*/
            itemView.findViewById(R.id.rl_search).setOnClickListener(this);
        }


        @Override
        public void onClick(View view) {
            int position = getLayoutPosition();
            switch (view.getId()) {
                case R.id.rl_search:
                    Intent intent=new Intent(mActivity, AnotherUserProfileActivity.class);
                    Bundle bundle=new Bundle();
                    bundle.putString("user_id",mList.get(position).getUserId());
                    bundle.putString("user_role",mList.get(position).getUserDTO().getRole());
                    intent.putExtras(bundle);
                    mActivity.startActivity(intent);
                    break;
            }
        }
    }
}
